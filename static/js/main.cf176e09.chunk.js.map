{"version":3,"sources":["helpers/helpers.js","components/Form/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["reName","reSurname","reEmail","dateNow","Date","toISOString","split","reLogin","rePassword","Form","useState","name","setName","surname","setSurname","email","setEmail","date","setDate","login","setLogin","password","setPassword","repeatPassword","setRepeatPassword","nameErrorMessage","setNameErrorMessage","surnameErrorMessage","setSurnameErrorMessage","emailErrorMessage","setEmailErrorMessage","dateErrorMessage","setDateErrorMessage","loginErrorMessage","setLoginErrorMessage","passwordErrorMessage","setPasswordErrorMessage","repeatPasswordErrorMessage","setRepeatPasswordErrorMessage","formValidMessage","setFormValidMessage","validName","test","validSurname","validEmail","currentAge","getTime","Math","round","validLogin","validPassword","isValid","useEffect","nameHandler","length","surnameHandler","emailHandler","dateHandler","loginHandler","passwordHandler","repeatPasswordHandler","className","onSubmit","e","preventDefault","value","onBlur","onChange","target","type","placeholder","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf176e09.chunk.js","sourcesContent":["export const reName = /^[a-zA-Z\\u00C0-\\u00ff]+$/;\r\nexport const reSurname = /^[a-zA-Z\\u00C0-\\u00ff]+$/;\r\nexport const reEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nexport const limit = 16;\r\nexport const dateNow = new Date().toISOString().split('T')[0];\r\nexport const reLogin = /^[0-9a-zA-Z]+$/;\r\nexport const rePassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    reName,\r\n    reSurname,\r\n    reEmail,\r\n    limit,\r\n    dateNow,\r\n    reLogin,\r\n    rePassword\r\n} from '../../helpers/helpers';\r\n\r\nexport const Form = () => {\r\n    const [name, setName] = useState('');\r\n    const [surname, setSurname] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [login, setLogin] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [repeatPassword, setRepeatPassword] = useState('');\r\n\r\n    const [nameErrorMessage, setNameErrorMessage] = useState('');\r\n    const [surnameErrorMessage, setSurnameErrorMessage] = useState('');\r\n    const [emailErrorMessage, setEmailErrorMessage] = useState('');\r\n    const [dateErrorMessage, setDateErrorMessage] = useState('');\r\n    const [loginErrorMessage, setLoginErrorMessage] = useState('');\r\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\r\n    const [repeatPasswordErrorMessage, setRepeatPasswordErrorMessage] = useState('');\r\n\r\n    const [formValid, setFormValid] = useState(false);\r\n    const [formValidMessage, setFormValidMessage] = useState('');\r\n\r\n    const validName = reName.test(name);\r\n    const validSurname = reSurname.test(surname);\r\n    const validEmail = reEmail.test(email);\r\n    let currentAge = (new Date(dateNow).getTime() - new Date(date).getTime()) / 1000 / 60 / 60 / 24;\r\n    currentAge = Math.round(currentAge / 365);\r\n    const validLogin = reLogin.test(login);\r\n    const validPassword = rePassword.test(password);\r\n    const validRepeatPassword = password === repeatPassword;\r\n\r\n    const isValid = validName && validSurname && validEmail && (limit <= currentAge) && validLogin && validPassword && validRepeatPassword;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        nameHandler();\r\n        surnameHandler();\r\n        emailHandler();\r\n        dateHandler();\r\n        loginHandler();\r\n        passwordHandler();\r\n        repeatPasswordHandler();\r\n\r\n        if (isValid) {\r\n            setFormValidMessage('Регистрация прошла успешно!');\r\n        } else {\r\n            setFormValidMessage('Не все поля заполнены верно!')\r\n        }\r\n    }\r\n\r\n    // console.log(formValid);\r\n\r\n    useEffect(() => {\r\n        setFormValidMessage('');\r\n    }, [isValid]);\r\n\r\n    const nameHandler = () => {\r\n        if (!name.length) {\r\n            setNameErrorMessage('Имя не может быть пустым');\r\n        } else if (!validName) {\r\n            setNameErrorMessage('Некоректное имя');\r\n        } else {\r\n            setNameErrorMessage('');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (name) {\r\n            nameHandler();\r\n        }\r\n    }, [name, nameHandler]);\r\n\r\n    const surnameHandler = () => {\r\n        if (!surname.length) {\r\n            setSurnameErrorMessage('Фамилия не может быть пустой');\r\n        } else if (!validSurname) {\r\n            setSurnameErrorMessage('Некоректная фамилия');\r\n        } else {\r\n            setSurnameErrorMessage('');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (surname) {\r\n            surnameHandler();\r\n        }\r\n    }, [surname, surnameHandler]);\r\n\r\n    const emailHandler = () => {\r\n        if (!email.length) {\r\n            setEmailErrorMessage('Почта не может быть пустой!');\r\n        } else if (!validEmail) {\r\n            setEmailErrorMessage('Недопустимый формат почты');\r\n        } else {\r\n            setEmailErrorMessage('');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (email) {\r\n            emailHandler();\r\n        }\r\n    }, [email, emailHandler]);\r\n\r\n    const dateHandler = () => {\r\n        if (!date.length) {\r\n            setDateErrorMessage('Дата не может быть пустой!');\r\n        } else if (currentAge < limit) {\r\n            setDateErrorMessage('Возраст пользователя меньше 16');\r\n        } else {\r\n            setDateErrorMessage('');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (date) {\r\n            dateHandler();\r\n        }\r\n    }, [date, dateHandler]);\r\n\r\n    const loginHandler = () => {\r\n        if (!login.length) {\r\n            setLoginErrorMessage('Логин не может быть пустым!');\r\n        } else if (!validLogin) {\r\n            setLoginErrorMessage('Недопустимый формат логина');\r\n        } else {\r\n            setLoginErrorMessage('');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (login) {\r\n            loginHandler();\r\n        }\r\n    }, [login, loginHandler]);\r\n\r\n    const passwordHandler = () => {\r\n        if (!password.length) {\r\n            setPasswordErrorMessage('Пароль не может быть пустым!');\r\n        } else if (!validPassword) {\r\n            setPasswordErrorMessage('Неправильный формат пароля');\r\n        } else if (password.length < 6) {\r\n            setPasswordErrorMessage('Пароль не должен быть менее 6 символов');\r\n        } else {\r\n            setPasswordErrorMessage('');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (password) {\r\n            passwordHandler();\r\n        }\r\n    }, [password, passwordHandler]);\r\n\r\n    const repeatPasswordHandler = () => {\r\n        if (!repeatPassword.length) {\r\n            setRepeatPasswordErrorMessage('Повторите пароль!');\r\n        } else if (password !== repeatPassword) {\r\n            setRepeatPasswordErrorMessage('Пароль введен не верно!');\r\n        } else {\r\n            setRepeatPasswordErrorMessage('');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (repeatPassword) {\r\n            repeatPasswordHandler();\r\n        }\r\n    }, [repeatPassword, repeatPasswordHandler]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <form onSubmit={handleSubmit} className='register-form'>\r\n\r\n                <label>First Name\r\n                    <input\r\n                        value={name}\r\n                        onBlur={(e) => nameHandler(e)}\r\n                        onChange={(e) => {\r\n                            setName(e.target.value);\r\n                            nameHandler();\r\n                        }}\r\n                        type=\"text\"\r\n                        placeholder=\"John\"\r\n                        className={`input ${nameErrorMessage ? 'input-error' : ''}`}\r\n                    />\r\n                </label>\r\n                {nameErrorMessage && <div className=\"error-message\">{nameErrorMessage}</div>}\r\n\r\n                <label>Last Name\r\n                    <input\r\n                        value={surname}\r\n                        onBlur={(e) => surnameHandler(e)}\r\n                        onChange={(e) => {\r\n                            setSurname(e.target.value);\r\n                            surnameHandler();\r\n                        }}\r\n                        className={`input ${surnameErrorMessage ? 'input-error' : ''}`}\r\n                        type=\"text\"\r\n                        placeholder=\"Doe\"\r\n                    />\r\n                </label>\r\n                {surnameErrorMessage && <div className=\"error-message\">{surnameErrorMessage}</div>}\r\n\r\n                <label>Email\r\n                    <input\r\n                        value={email}\r\n                        onBlur={(e) => emailHandler(e)}\r\n                        onChange={(e) => {\r\n                            setEmail(e.target.value);\r\n                            emailHandler();\r\n                        }}\r\n                        type=\"text\"\r\n                        id=\"email\"\r\n                        placeholder=\"john.doe@gmail.com\"\r\n                        className={`input ${emailErrorMessage ? 'input-error' : ''}`}\r\n                    />\r\n                </label>\r\n                {emailErrorMessage && <div className=\"error-message\">{emailErrorMessage}</div>}\r\n\r\n                <label>Date of birth\r\n                    <input\r\n                        value={date}\r\n                        onBlur={(e) => dateHandler(e)}\r\n                        onChange={(e) => {\r\n                            setDate(e.target.value);\r\n                            dateHandler();\r\n                        }}\r\n                        type=\"date\"\r\n                        className={`input ${dateErrorMessage ? 'input-error' : ''}`}\r\n                    />\r\n                </label>\r\n                {dateErrorMessage && <div className=\"error-message\">{dateErrorMessage}</div>}\r\n\r\n                <label>Login\r\n                    <input\r\n                        value={login}\r\n                        onBlur={(e) => loginHandler(e)}\r\n                        onChange={(e) => {\r\n                            setLogin(e.target.value);\r\n                            loginHandler();\r\n                        }}\r\n                        type=\"text\"\r\n                        placeholder=\"JohnD\"\r\n                        className={`input ${loginErrorMessage ? 'input-error' : ''}`}\r\n                    />\r\n                </label>\r\n                {loginErrorMessage && <div className=\"error-message\">{loginErrorMessage}</div>}\r\n\r\n                <label>Password\r\n                    <input\r\n                        value={password}\r\n                        onBlur={(e) => passwordHandler(e)}\r\n                        onChange={(e) => {\r\n                            setPassword(e.target.value);\r\n                            passwordHandler();\r\n                        }}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        className={`input ${passwordErrorMessage ? 'input-error' : ''}`}\r\n                    />\r\n                </label>\r\n                {passwordErrorMessage && <div className=\"error-message\">{passwordErrorMessage}</div>}\r\n\r\n                <label>Repeat password\r\n                    <input\r\n                        onBlur={(e) => repeatPasswordHandler(e)}\r\n                        value={repeatPassword}\r\n                        onChange={(e) => {\r\n                            setRepeatPassword(e.target.value);\r\n                            repeatPasswordHandler();\r\n                        }}\r\n                        type=\"password\"\r\n                        placeholder=\"Repeat password\"\r\n                        className={`input ${repeatPasswordErrorMessage ? 'input-error' : 'input'}`}\r\n                    />\r\n                </label>\r\n                {repeatPasswordErrorMessage && <div className=\"error-message\">{repeatPasswordErrorMessage}</div>}\r\n\r\n                <button type='submit' className=\"btn\">Register</button>\r\n                {formValidMessage && (\r\n                    <div className={`${isValid ? 'success-form' : 'error-form'}`}>\r\n                        {formValidMessage}\r\n                    </div>\r\n                )}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport './App.scss';\r\nimport './styles/reset.scss';\r\nimport {Form} from \"./components/Form/Form\";\r\n\r\nfunction App() {\r\n    return (\r\n       <Form />\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}