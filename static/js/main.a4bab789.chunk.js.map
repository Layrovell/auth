{"version":3,"sources":["helpers/helpers.js","components/Form/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["reName","reSurname","reEmail","dateNow","Date","toISOString","split","reLogin","rePassword","Form","useState","name","setName","surname","setSurname","email","setEmail","date","setDate","login","setLogin","password","setPassword","repeatPassword","setRepeatPassword","nameErrorMessage","setNameErrorMessage","surnameErrorMessage","setSurnameErrorMessage","emailErrorMessage","setEmailErrorMessage","dateErrorMessage","setDateErrorMessage","loginErrorMessage","setLoginErrorMessage","passwordErrorMessage","setPasswordErrorMessage","repeatPasswordErrorMessage","setRepeatPasswordErrorMessage","formValid","setFormValid","formValidMessage","setFormValidMessage","validName","test","validSurname","validEmail","currentAge","getTime","Math","round","validLogin","validPassword","validRepeatPassword","blurHandler","e","target","nameHandler","surnameHandler","emailHandler","dateHandler","loginHandler","passwordHandler","repeatPasswordHandler","length","className","onSubmit","preventDefault","htmlFor","value","onBlur","onChange","type","placeholder","id","autoComplete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4bab789.chunk.js","sourcesContent":["export const reName = /^[a-zA-Z\\u00C0-\\u00ff]+$/;\r\nexport const reSurname = /^[a-zA-Z\\u00C0-\\u00ff]+$/;\r\nexport const reEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nexport const limit = 16;\r\nexport const dateNow = new Date().toISOString().split('T')[0];\r\nexport const reLogin = /^[0-9a-zA-Z]+$/;\r\nexport const rePassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/;\r\n","import React, {useState} from \"react\";\r\nimport {\r\n    reName,\r\n    reSurname,\r\n    reEmail,\r\n    limit,\r\n    dateNow,\r\n    reLogin,\r\n    rePassword\r\n} from '../../helpers/helpers';\r\n\r\nexport const Form = () => {\r\n    const [name, setName] = useState('');\r\n    const [surname, setSurname] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [login, setLogin] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [repeatPassword, setRepeatPassword] = useState('');\r\n\r\n    const [nameErrorMessage, setNameErrorMessage] = useState('');\r\n    const [surnameErrorMessage, setSurnameErrorMessage] = useState('');\r\n    const [emailErrorMessage, setEmailErrorMessage] = useState('');\r\n    const [dateErrorMessage, setDateErrorMessage] = useState('');\r\n    const [loginErrorMessage, setLoginErrorMessage] = useState('');\r\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\r\n    const [repeatPasswordErrorMessage, setRepeatPasswordErrorMessage] = useState('');\r\n\r\n    const [formValid, setFormValid] = useState(false);\r\n    const [formValidMessage, setFormValidMessage] = useState('');\r\n\r\n    const validName = reName.test(name);\r\n    const validSurname = reSurname.test(surname);\r\n    const validEmail = reEmail.test(email);\r\n    let currentAge = (new Date(dateNow).getTime() - new Date(date).getTime()) / 1000 / 60 / 60 / 24;\r\n    currentAge = Math.round(currentAge / 365);\r\n    const validLogin = reLogin.test(login);\r\n    const validPassword = rePassword.test(password);\r\n    const validRepeatPassword = password === repeatPassword;\r\n\r\n    const blurHandler = (e) => {\r\n        switch (e.target.name) {\r\n            case 'name':\r\n                nameHandler(e);\r\n                break;\r\n            case 'surname':\r\n                surnameHandler(e);\r\n                break;\r\n            case 'email':\r\n                emailHandler(e);\r\n                break;\r\n            case 'date':\r\n                dateHandler(e);\r\n                break;\r\n            case 'login':\r\n                loginHandler(e);\r\n                break;\r\n            case 'password':\r\n                passwordHandler(e);\r\n                break;\r\n            case 'repeatPassword':\r\n                repeatPasswordHandler(e);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        nameHandler();\r\n        surnameHandler();\r\n        emailHandler();\r\n        dateHandler();\r\n        loginHandler();\r\n        passwordHandler();\r\n        repeatPasswordHandler();\r\n\r\n        setFormValid(validName && validSurname && validEmail && (limit <= currentAge) && validLogin && validPassword && validRepeatPassword);\r\n\r\n        if (formValid) {\r\n            setFormValidMessage('Регистрация прошла успешно!');\r\n        } else {\r\n            setFormValidMessage('Не все поля заполнены верно!')\r\n        }\r\n    }\r\n\r\n    const nameHandler = () => {\r\n        if (!name.length) {\r\n            setNameErrorMessage('Имя не может быть пустым');\r\n        } else if (!validName) {\r\n            setNameErrorMessage('Некоректное имя');\r\n        } else {\r\n            setNameErrorMessage('');\r\n        }\r\n    }\r\n\r\n    const surnameHandler = () => {\r\n        if (!surname.length) {\r\n            setSurnameErrorMessage('Фамилия не может быть пустой');\r\n        } else if (!validSurname) {\r\n            setSurnameErrorMessage('Некоректная фамилия');\r\n        } else {\r\n            setSurnameErrorMessage('');\r\n        }\r\n    }\r\n\r\n    const emailHandler = () => {\r\n        if (!email.length) {\r\n            setEmailErrorMessage('Почта не может быть пустой!');\r\n        } else if (!validEmail) {\r\n            setEmailErrorMessage('Недопустимый формат почты');\r\n        } else {\r\n            setEmailErrorMessage('');\r\n        }\r\n    }\r\n\r\n    const dateHandler = () => {\r\n        if (!date.length) {\r\n            setDateErrorMessage('Дата не может быть пустой!');\r\n        } else if (currentAge < limit) {\r\n            setDateErrorMessage('Возраст пользователя меньше 16');\r\n        } else {\r\n            setDateErrorMessage('');\r\n        }\r\n    }\r\n\r\n    const loginHandler = () => {\r\n        if (!login.length) {\r\n            setLoginErrorMessage('Логин не может быть пустым!');\r\n        } else if (!validLogin) {\r\n            setLoginErrorMessage('Недопустимый формат логина');\r\n        } else {\r\n            setLoginErrorMessage('');\r\n        }\r\n    }\r\n\r\n    const passwordHandler = () => {\r\n        if (!password.length) {\r\n            setPasswordErrorMessage('Пароль не может быть пустым!');\r\n        } else if (!validPassword) {\r\n            setPasswordErrorMessage('Неправильный формат пароля');\r\n        } else if (password.length < 6) {\r\n            setPasswordErrorMessage('Пароль не должен быть менее 6 символов');\r\n        } else {\r\n            setPasswordErrorMessage('');\r\n        }\r\n    }\r\n\r\n    const repeatPasswordHandler = () => {\r\n        if (!repeatPassword.length) {\r\n            setRepeatPasswordErrorMessage('Повторите пароль!');\r\n        } else if (password !== repeatPassword) {\r\n            setRepeatPasswordErrorMessage('Пароль введен не верно!');\r\n        } else {\r\n            setRepeatPasswordErrorMessage('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <form onSubmit={handleSubmit} className='register-form'>\r\n                <label htmlFor='firstName'>First Name</label>\r\n                    <input\r\n                        value={name}\r\n                        onBlur={(e) => blurHandler(e)}\r\n                        onChange={(e) => {\r\n                            setName(e.target.value);\r\n                            nameHandler();\r\n                        }}\r\n                        type=\"text\"\r\n                        placeholder=\"John\"\r\n                        name=\"name\"\r\n                        id=\"firstName\"\r\n                        className={`input ${nameErrorMessage ? 'input-error' : ''}`}\r\n                        autoComplete={'off'}\r\n                    />\r\n                {nameErrorMessage && <div className=\"error-message\">{nameErrorMessage}</div>}\r\n\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input\r\n                        value={surname}\r\n                        onBlur={(e) => blurHandler(e)}\r\n                        onChange={(e) => {\r\n                            setSurname(e.target.value);\r\n                            surnameHandler();\r\n                        }}\r\n                        className={`input ${surnameErrorMessage ? 'input-error' : ''}`}\r\n                        type=\"text\"\r\n                        id=\"lastName\"\r\n                        placeholder=\"Doe\"\r\n                        name=\"surname\"\r\n                    />\r\n                {surnameErrorMessage && <div className=\"error-message\">{surnameErrorMessage}</div>}\r\n\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                    value={email}\r\n                    onBlur={(e) => blurHandler(e)}\r\n                    onChange={(e) => {\r\n                        setEmail(e.target.value);\r\n                        emailHandler();\r\n                    }}\r\n                    type=\"text\"\r\n                    placeholder=\"john.doe@gmail.com\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    className={`input ${emailErrorMessage ? 'input-error' : ''}`}\r\n                />\r\n                {emailErrorMessage && <div className=\"error-message\">{emailErrorMessage}</div>}\r\n\r\n                <label htmlFor=\"dateBirth\">Date of birth</label>\r\n                <input\r\n                    value={date}\r\n                    onBlur={(e) => blurHandler(e)}\r\n                    onChange={(e) => {\r\n                        setDate(e.target.value);\r\n                        dateHandler();\r\n                    }}\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    id='dateBirth'\r\n                    className={`input ${dateErrorMessage ? 'input-error' : ''}`}\r\n                />\r\n                {dateErrorMessage && <div className=\"error-message\">{dateErrorMessage}</div>}\r\n\r\n                <label htmlFor=\"login\">Login</label>\r\n                <input\r\n                    value={login}\r\n                    onBlur={(e) => blurHandler(e)}\r\n                    onChange={(e) => {\r\n                        setLogin(e.target.value);\r\n                        loginHandler();\r\n                    }}\r\n                    type=\"text\"\r\n                    placeholder=\"Login\"\r\n                    name=\"login\"\r\n                    id='login'\r\n                    className={`input ${loginErrorMessage ? 'input-error' : ''}`}\r\n                />\r\n                {loginErrorMessage && <div className=\"error-message\">{loginErrorMessage}</div>}\r\n\r\n                <label htmlFor=\"pass\">Password</label>\r\n                <input\r\n                    value={password}\r\n                    onBlur={(e) => blurHandler(e)}\r\n                    onChange={(e) => {\r\n                        setPassword(e.target.value);\r\n                        passwordHandler();\r\n                    }}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    id=\"pass\"\r\n                    className={`input ${passwordErrorMessage ? 'input-error' : ''}`}\r\n                />\r\n                {passwordErrorMessage && <div className=\"error-message\">{passwordErrorMessage}</div>}\r\n\r\n                <label htmlFor=\"repeatPass\">Repeat password</label>\r\n                <input\r\n                    onBlur={(e) => blurHandler(e)}\r\n                    value={repeatPassword}\r\n                    onChange={(e) => {\r\n                        setRepeatPassword(e.target.value);\r\n                        repeatPasswordHandler();\r\n                    }}\r\n                    type=\"password\"\r\n                    placeholder=\"Repeat password\"\r\n                    name=\"repeatPassword\"\r\n                    id=\"repeatPass\"\r\n                    className={`input ${repeatPasswordErrorMessage ? 'input-error' : 'input'}`}\r\n                />\r\n                {repeatPasswordErrorMessage && <div className=\"error-message\">{repeatPasswordErrorMessage}</div>}\r\n\r\n                <button type='submit' className=\"btn\">Register</button>\r\n                {formValidMessage && (\r\n                    <div\r\n                        className={`${formValid ? 'success-form' : 'error-form'}`}\r\n                    >\r\n                        {formValidMessage}\r\n                    </div>\r\n                )}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport './App.scss';\r\nimport './styles/reset.scss';\r\nimport {Form} from \"./components/Form/Form\";\r\n\r\nfunction App() {\r\n    return (\r\n       <Form />\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}